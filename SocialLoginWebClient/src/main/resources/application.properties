server.port=8086
# https://console.cloud.google.com to create app
#spring.security.oauth2.client.registration.google.client-id =
#spring.security.oauth2.client.registration.google.client-secret =
# The other settings are not required for google because Spring Framework has then pre-configured for us.

#developers.facebook.com
#spring.security.oauth2.client.registration.facebook.client-id = 3077262899182592
#spring.security.oauth2.client.registration.facebook.client-secret =

#https://developer.okta.com/
#Login: samsonmarikwa@outlook.com
#Org URL: https://dev-4818072.okta.com
# When creating the app, provide
# Base URI:             http://localhost:8086/
# Login redirect URIs:  http://localhost:8086/login/oauth2/code/okta
# Sign-out redirect URIs:   http://localhost:8086

spring.security.oauth2.client.registration.okta.client-id = 0oa4uz64bx6Bqb23j5d7
spring.security.oauth2.client.registration.okta.client-secret =
spring.security.oauth2.client.registration.okta.scope = openid,profile
# The domain name is specified in the email that you receive from okta, as the domain
spring.security.oauth2.client.provider.okta.issuer-uri = https://dev-4818072.okta.com

# OpenID Configuration is exposed on the following endpoint. The Base URI should be specific to the ID provider and
# the last part will be the same for all the providers. Check this endpoint and take note of the end_session_endpoint.
# Okta:     https://dev-4818072.okta.com/.well-known/openid-configuration
# Keycloak: http://localhost:8080/auth/realms/appsdeveloperblog/.well-known/openid-configuration